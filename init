#!/bin/bash

### GLOBAL VARIABLES
REPOSITORY_URL="https://raw.githubusercontent.com/chadwagoner/alpine-linux-pdc/main"
HEADER_NO_CACHE="Cache-Control: no-cache, no-store"

### GLOBAL FUNCTIONS
create_directory () {
  mkdir -p $1
}

create_file () {
  touch $1
}

set_ownership () {
  chown $2:$2 $1
}

set_permission () {
  chmod $2 $1
}

### INSTALL REQUIRED BASE PACKAGES
echo -e "INSTALLING BASE PACKAGES"
apk add -U curl lm-sensors ncurses pciutils yq --quiet
echo -e ""

### CREATE CONFIG DIRECTORY
if [[ ! -d /root/.config/alpine-linux-pdc ]]; then
  echo -e "CONFIG DIRECTORY MISSING, CREATING..."
  #mkdir -p /root/.config/alpine-linux-pdc ### DELETE AFTER VERIFICATION
  create_directory /root/.config/alpine-linux-pdc
  echo -e ""
else
  echo -e "CONFIG DIRECTORY EXISTS, SKIPPING..."
  echo -e ""
fi

### SET CONFIG DIRECTORY OWNERSHIP
if [[ "$(stat -c '%U:%G' /root/.config/alpine-linux-pdc)" != "root:root" ]]; then
  echo -e "CONFIG DIRECTORY OWNERSHIP IS WRONG, CHANGING..."
  #chown root:root /root/.config/alpine-linux-pdc ### DELETE AFTER VERIFICATION
  set_ownership /root/.config/alpine-linux-pdc root
  echo -e ""
else
  echo -e "CONFIG DIRECTORY OWNERSHIP IS CORRECT, SKIPPING..."
  echo -e ""
fi

### SET CONFIG DIRECTORY PERMISSIONS
if [[ "$(stat -c '%a' /root/.config/alpine-linux-pdc)" != 600 ]]; then
  echo -e "CONFIG DIRECTORY PERMISSIONS ARE WRONG, CHANGING..."
  # chmod 600 /root/.config/alpine-linux-pdc
  set_permission /root/.config/alpine-linux-pdc 600
  echo -e ""
else
  echo -e "CONFIG DIRECTORY PERMISSIONS ARE CORRECT, SKIPPING..."
  echo -e ""
fi

### CREATE EMPTY CONFIG FILE (IF DOESN'T EXIST)
if [[ ! -f /root/.config/alpine-linux-pdc/config.yaml ]]; then
  echo -e "CONFIG FILE MISSING, CREATING..."
  # touch /root/.config/alpine-linux-pdc/config.yaml
  create_file /root/.config/alpine-linux-pdc/config.yaml
  echo -e ""
else
  echo -e "CONFIG FILE EXISTS, SKIPPING..."
  echo -e ""
fi

### SET CONFIG FILE OWNERSHIP
if [[ "$(stat -c '%U:%G' /root/.config/alpine-linux-pdc/config.yaml)" != "root:root" ]]; then
  echo -e "CONFIG FILE OWNERSHIP IS WRONG, CHANGING..."
  # chown root:root /root/.config/alpine-linux-pdc/config.yaml
  set_ownership /root/.config/alpine-linux-pdc/config.yaml root
  echo -e ""
else
  echo -e "CONFIG FILE OWNERSHIP IS CORRECT, SKIPPING..."
  echo -e ""
fi

### SET CONFIG FILE PERMISSIONS
if [[ "$(stat -c '%a' /root/.config/alpine-linux-pdc/config.yaml)" != 600 ]]; then
  echo -e "CONFIG FILE PERMISSIONS ARE WRONG, CHANGING..."
  # chmod 600 /root/.config/alpine-linux-pdc/config.yaml
  set_permission /root/.config/alpine-linux-pdc/config.yaml 600
  echo -e ""
else
  echo -e "CONFIG FILE PERMISSIONS ARE CORRECT, SKIPPING..."
  echo -e ""
fi

### UPDATE CRON SCHEDULES
LOCAL_ROOT=$(cat /etc/crontabs/root | sha256sum | awk '{print $1}')
REMOTE_ROOT=$(curl -sL -H 'HEADER_NO_CACHE' $REPOSITORY_URL/templates/crontab-root | sha256sum | awk '{print $1}')

if [[ $LOCAL_ROOT != $REMOTE_ROOT ]]; then
  echo -e "CRON FILE MISMATCH, UPDATING..."
  curl -sL -o /etc/crontabs/root -H '$HEADER_NO_CACHE' $REPOSITORY_URL/templates/crontab-root
  echo -e ""

  ### SET CRON FILE OWNERSHIP
  if [[ "$(stat -c '%U:%G' /etc/crontabs/root)" != "root:root" ]]; then
    echo -e "CRON FILE OWNERSHIP IS WRONG, CHANGING..."
    # chown root:root /etc/crontabs/root
    set_ownership /etc/crontabs/root root
    echo -e ""
  else
    echo -e "CRON FILE OWNERSHIP IS CORRECT, SKIPPING..."
    echo -e ""
  fi

  ### SET CRON FILE PERMISSIONS
  if [[ "$(stat -c '%a' /etc/crontabs/root)" != 600 ]]; then
    echo -e "CRON FILE PERMISSIONS ARE WRONG, CHANGING..."
    # chmod 600 /etc/crontabs/root
    set_permission /etc/crontabs/root 600
    echo -e ""
  else
    echo -e "CRON FILE PERMISSIONS ARE CORRECT, SKIPPING..."
    echo -e ""
  fi

  ### RESTART CRON SERVICE
  echo -e "CRON FILE UPDATED, RESTARTING..."
  rc-service crond restart --quiet
  echo -e ""
else
  echo -e "CRON FILE LATEST, SKIPPING..."
  echo -e ""
fi

### INSTALL OS-UPDATER
if [[ ! -f /etc/periodic/monthly/os-updater ]]; then
  echo -e "OS-UPDATER MISSING, INSTALLING..."
  curl -sL -o /etc/periodic/monthly/os-updater -H '$HEADER_NO_CACHE' $REPOSITORY_URL/scripts/os-updater
  echo -e ""

  ### SET OS-UPDATER OWNERSHIP
  if [[ "$(stat -c '%U:%G' /etc/periodic/monthly/os-updater)" != "root:root" ]]; then
    echo -e "OS-UPDATER OWNERSHIP IS WRONG, CHANGING..."
    # chown root:root /etc/periodic/monthly/os-updater
    set_ownership /etc/periodic/monthly/os-updater root
    echo -e ""
  else
    echo -e "OS-UPDATER OWNERSHIP IS CORRECT, SKIPPING..."
    echo -e ""
  fi

  ### SET OS-UPDATER PERMISSIONS
  if [[ "$(stat -c '%a' /etc/periodic/monthly/os-updater)" != 700 ]]; then
    echo -e "OS-UPDATER PERMISSIONS ARE WRONG, CHANGING..."
    # chmod 700 /etc/periodic/monthly/os-updater
    set_permission /etc/periodic/monthly/os-updater 700
    echo -e ""
  else
    echo -e "OS-UPDATER PERMISSIONS ARE CORRECT, SKIPPING..."
    echo -e ""
  fi
else
  LOCAL_OS_UPDATER=$(cat /etc/periodic/monthly/os-updater | sha256sum | awk '{print $1}')
  REMOTE_OS_UPDATER=$(curl -sL -H 'HEADER_NO_CACHE' $REPOSITORY_URL/scripts/os-updater | sha256sum | awk '{print $1}')

  if [[ $LOCAL_OS_UPDATER != $REMOTE_OS_UPDATER ]]; then
    echo -e "OS-UPDATER MISMATCH, UPDATING..."
    curl -sL -o /etc/periodic/monthly/os-updater -H '$HEADER_NO_CACHE' $REPOSITORY_URL/scripts/os-updater
    echo -e ""

    ### SET OS-UPDATER OWNERSHIP
    if [[ "$(stat -c '%U:%G' /etc/periodic/monthly/os-updater)" != "root:root" ]]; then
      echo -e "OS-UPDATER OWNERSHIP IS WRONG, CHANGING..."
      # chown root:root /etc/periodic/monthly/os-updater
      set_ownership /etc/periodic/monthly/os-updater root
      echo -e ""
    else
      echo -e "OS-UPDATER OWNERSHIP IS CORRECT, SKIPPING..."
      echo -e ""
    fi

    ### SET OS-UPDATER PERMISSIONS
    if [[ "$(stat -c '%a' /etc/periodic/monthly/os-updater)" != 700 ]]; then
      echo -e "OS-UPDATER PERMISSIONS ARE WRONG, CHANGING..."
      # chmod 700 /etc/periodic/monthly/os-updater
      set_permission /etc/periodic/monthly/os-updater 700
      echo -e ""
    else
      echo -e "OS-UPDATER PERMISSIONS ARE CORRECT, SKIPPING..."
      echo -e ""
    fi
  else
    echo -e "OS-UPDATER LATEST, SKIPPING..."
  fi
fi

### INSTALL PDC
if [[ ! -f /etc/periodic/hourly/pdc ]]; then
  echo -e "PDC MISSING, INSTALLING..."
  curl -sL -o /etc/periodic/hourly/pdc -H '$HEADER_NO_CACHE' $REPOSITORY_URL/scripts/pdc
  echo -e ""

  ### SET PDC OWNERSHIP
  if [[ "$(stat -c '%U:%G' /etc/periodic/hourly/pdc)" != "root:root" ]]; then
    echo -e "PDC OWNERSHIP IS WRONG, CHANGING..."
    set_ownership /etc/periodic/hourly/pdc root
    echo -e ""
  else
    echo -e "PDC OWNERSHIP IS CORRECT, SKIPPING..."
    echo -e ""
  fi

  ### SET PDC PERMISSIONS
  if [[ "$(stat -c '%a' /etc/periodic/hourly/pdc)" != 700 ]]; then
    echo -e "PDC PERMISSIONS ARE WRONG, CHANGING..."
    set_permission /etc/periodic/hourly/pdc 700
    echo -e ""
  else
    echo -e "PDC PERMISSIONS ARE CORRECT, SKIPPING..."
    echo -e ""
  fi
else
  LOCAL_PDC=$(cat /etc/periodic/hourly/pdc | sha256sum | awk '{print $1}')
  REMOTE_PDC=$(curl -sL -H 'HEADER_NO_CACHE' $REPOSITORY_URL/scripts/pdc | sha256sum | awk '{print $1}')

  if [[ $LOCAL_PDC != $REMOTE_PDC ]]; then
    echo -e "PDC MISMATCH, UPDATING..."
    curl -sL -o /etc/periodic/hourly/pdc -H '$HEADER_NO_CACHE' $REPOSITORY_URL/scripts/pdc
    echo -e ""

    ### SET PDC OWNERSHIP
    if [[ "$(stat -c '%U:%G' /etc/periodic/hourly/pdc)" != "root:root" ]]; then
      echo -e "PDC OWNERSHIP IS WRONG, CHANGING..."
      set_ownership /etc/periodic/hourly/pdc root
      echo -e ""
    else
      echo -e "PDC OWNERSHIP IS CORRECT, SKIPPING..."
      echo -e ""
    fi

    ### SET PDC PERMISSIONS
    if [[ "$(stat -c '%a' /etc/periodic/hourly/pdc)" != 700 ]]; then
      echo -e "PDC PERMISSIONS ARE WRONG, CHANGING..."
      set_permission /etc/periodic/hourly/pdc 700
      echo -e ""
    else
      echo -e "PDC PERMISSIONS ARE CORRECT, SKIPPING..."
      echo -e ""
    fi
  else
    echo -e "PDC LATEST, SKIPPING..."
  fi
fi

### INSTALL PDC-UPDATER
if [[ ! -f /etc/periodic/15min/pdc-updater ]]; then
  echo -e "PDC-UPDATER MISSING, INSTALLING..."
  curl -sL -o /etc/periodic/15min/pdc-updater -H '$HEADER_NO_CACHE' $REPOSITORY_URL/scripts/pdc-updater
  echo -e ""

  ### SET PDC-UPDATER OWNERSHIP
  if [[ "$(stat -c '%U:%G' /etc/periodic/15min/pdc-updater)" != "root:root" ]]; then
    echo -e "PDC-UPDATER OWNERSHIP IS WRONG, CHANGING..."
    # chown root:root /etc/periodic/15min/pdc-updater
    set_ownership /etc/periodic/15min/pdc-updater root
    echo -e ""
  else
    echo -e "PDC-UPDATER OWNERSHIP IS CORRECT, SKIPPING..."
    echo -e ""
  fi

  ### SET PDC-UPDATER PERMISSIONS
  if [[ "$(stat -c '%a' /etc/periodic/15min/pdc-updater)" != 700 ]]; then
    echo -e "PDC-UPDATER PERMISSIONS ARE WRONG, CHANGING..."
    # chmod 700 /etc/periodic/15min/pdc-updater
    set_permission /etc/periodic/15min/pdc-updater 700
    echo -e ""
  else
    echo -e "PDC-UPDATER PERMISSIONS ARE CORRECT, SKIPPING..."
    echo -e ""
  fi
else
  LOCAL_OS_UPDATER=$(cat /etc/periodic/15min/pdc-updater | sha256sum | awk '{print $1}')
  REMOTE_OS_UPDATER=$(curl -sL -H 'HEADER_NO_CACHE' $REPOSITORY_URL/scripts/pdc-updater | sha256sum | awk '{print $1}')

  if [[ $LOCAL_OS_UPDATER != $REMOTE_OS_UPDATER ]]; then
    echo -e "PDC-UPDATER MISMATCH, UPDATING..."
    curl -sL -o /etc/periodic/15min/pdc-updater -H '$HEADER_NO_CACHE' $REPOSITORY_URL/scripts/pdc-updater
    echo -e ""

    ### SET PDC-UPDATER OWNERSHIP
    if [[ "$(stat -c '%U:%G' /etc/periodic/15min/pdc-updater)" != "root:root" ]]; then
      echo -e "PDC-UPDATER OWNERSHIP IS WRONG, CHANGING..."
      # chown root:root /etc/periodic/15min/pdc-updater
      set_ownership /etc/periodic/15min/pdc-updater root
      echo -e ""
    else
      echo -e "PDC-UPDATER OWNERSHIP IS CORRECT, SKIPPING..."
      echo -e ""
    fi

    ### SET PDC-UPDATER PERMISSIONS
    if [[ "$(stat -c '%a' /etc/periodic/15min/pdc-updater)" != 700 ]]; then
      echo -e "PDC-UPDATER PERMISSIONS ARE WRONG, CHANGING..."
      # chmod 700 /etc/periodic/15min/pdc-updater
      set_permission /etc/periodic/15min/pdc-updater 700
      echo -e ""
    else
      echo -e "PDC-UPDATER PERMISSIONS ARE CORRECT, SKIPPING..."
      echo -e ""
    fi
  else
    echo -e "PDC-UPDATER LATEST, SKIPPING..."
  fi
fi
