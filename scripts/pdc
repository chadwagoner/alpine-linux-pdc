#!/bin/bash

### GLOBAL VARIABLES
REPOSITORY_URL="https://raw.githubusercontent.com/chadwagoner/alpine-linux-pdc/main"
HEADER_NO_CACHE="Cache-Control: no-cache, no-store"
CONFIG="/root/.config/alpine-linux-pdc/config.yaml"

### GLOBAL FUNCTIONS
create_directory () {
  mkdir -p $1
}

create_file () {
  touch $1
}

set_ownership () {
  chown $2:$2 $1
}

set_permission () {
  chmod $2 $1
}

### APK REPOSITORIES
LOCAL_APK_REPOSITORIES=$(cat /etc/apk/repositories | sha256sum | awk '{print $1}')
REMOTE_APK_REPOSITORIES=$(curl -sL -H '$HEADER_NO_CACHE' $REPOSITORY_URL/templates/apk/repositories | sha256sum | awk '{print $1}')

if [[ $LOCAL_APK_REPOSITORIES != $REMOTE_APK_REPOSITORIES ]]; then
  echo -e "APK REPOSITORIES MISMATCH, UPDATING..."
  curl -sL -o /etc/apk/repositories -H '$HEADER_NO_CACHE' $REPOSITORY_URL/templates/apk/repositories
  echo -e ""

  ### SET APK REPOSITORIES FILE OWNERSHIP
  if [[ "$(stat -c '%U:%G' /etc/apk/repositories)" != "root:root" ]]; then
    echo -e "APK REPOSITORIES OWNERSHIP IS WRONG, CHANGING..."
    set_ownership /etc/apk/repositories root
    echo -e ""
  else
    echo -e "APK REPOSITORIES OWNERSHIP IS CORRECT, SKIPPING..."
    echo -e ""
  fi

  ### SET APK REPOSITORIES FILE PERMISSIONS
  if [[ "$(stat -c '%a' /etc/apk/repositories)" != 600 ]]; then
    echo -e "APK REPOSITORIES FILE PERMISSIONS ARE WRONG, CHANGING..."
    set_permission /etc/apk/repositories 644
    echo -e ""
  else
    echo -e "APK REPOSITORIES FILE PERMISSIONS ARE CORRECT, SKIPPING..."
    echo -e ""
  fi

  ### REFRESH APK CACHE
  echo -e "UPDATING APK CACHE..."
  apk update
  echo -e ""
else
  echo -e "APK REPOSITORIES FILE LATEST, SKIPPING..."
  echo -e ""
fi

### DRIVERS MODULE
echo -e "### DRIVERS MODULE - START ###"
if [[ $(yq eval '.system.drivers.amd // false' $CONFIG) == true ]]; then
  ### PENDING SUPPORT
  echo -e "DON'T SUPPORT AMD CURRENTLY, NO DEVICES"
elif [[ $(yq eval '.system.drivers.intel // false' $CONFIG) == true ]]; then
  if [[ -z $(apk list --installed | grep intel-media-driver) ]] || [[ -z $(apk list --installed | grep mesa-dri-gallium) ]]; then
    echo -e "INSTALLING INTEL DRIVERS"
    apk add -U intel-media-driver mesa-dri-gallium --quiet
  else
    echo -e "INTEL DRIVERS INSTALLED, SKIPPING..."
  fi
fi
echo -e "### DRIVERS MODULE - STOP ###"

### NFS MODULE
echo -e "### NFS MODULE - START ###"
if [[ $(yq eval '.system.nfs.enabled // false' $CONFIG) == true ]]; then
  if [[ -z "$(which nfsstat)" ]]; then
    ### INSTALL NFS-UTILS
    echo -e "INSTALLING NFS-UTILS"
    apk add -U nfs-utils --quiet

    ### ENABLE BOOT START
    echo -e "ENABLE BOOT START"
    rc-update add nfsmount boot

    ### START SERVICE
    echo -e "START SERVICE"
    rc-service nfsmount start
  else
    echo -e "NFS-UTILS IS ALREADY INSTALLED, SKIPPING..."
  fi

  if [[ $(yq eval '.system.nfs.mounts.media // false' $CONFIG) == true ]]; then
    if [[ ! -d /mnt/media ]]; then
      ### CREATE BINDING DIRECTORY
      echo -e "CREATING BINDING DIRECTORY"
      mkdir -p /mnt/media
    else
      echo -e "BINDING DIRECTORY EXISTS, SKIPPING..."
    fi

    if [[ -z "$(grep '/mnt/media ' /proc/mounts)" ]]; then
      if [[ -z "$(grep '/mnt/media' /etc/fstab)" ]]; then
        ### CREATE NFS MOUNT ENTRY IN FSTAB
        echo -e "ADDING NFS MOUNT IN FSTAB"
        echo -e "$(yq eval '.system.nfs.address // ""' $CONFIG):/volume1/media /mnt/media nfs rw,vers=4,rsize=32768,wsize=32768,soft 0 0" >> /etc/fstab

        ### MOUNT
        echo -e "MOUNTING"
        mount -a
      else
        ### MOUNT
        echo -e "MOUNTING"
        mount -a
      fi
    else
      echo -e "MEDIA MOUNT EXISTS, SKIPPING..."
    fi
  else
    echo -e "SYSTEM.NFS.MOUNTS.MEDIA IS FALSE, SKIPPING..."
  fi
else
  echo -e "SYSTEM.NFS.ENABLED IS FALSE, SKIPPING..."
fi
echo -e "### NFS MODULE - STOP ###"

### TAILSCALE MODULE
echo -e "### TAILSCALE MODULE - START ###"
if [[ $(yq eval '.system.tailscale.enabled // false' $CONFIG) == true ]]; then
  if [[ -z "$(which tailscale)" ]]; then
    echo -e "INSTALLING TAILSCALE"
    apk add -U tailscale --quiet

    echo -e "ENABLE START"
    rc-update add tailscale default

    echo -e "START SERVICE"
    rc-service tailscale start
  else
    echo -e "TAILSCALE IS ALREADY INSTALLED, SKIPPING..."
  fi

  if [[ $(yq eval '.system.tailscale.exit // false' $CONFIG) == true ]] || [[ $(yq eval '.system.tailscale.subnet // false' $CONFIG) == true ]]; then
    if [[ ! -f /etc/sysctl.d/99-tailscale.conf ]]; then
      echo -e "99-TAILSCALE.CONF MISSING, CREATING..."
      echo -e "net.ipv4.ip_forward = 1\nnet.ipv6.conf.all.forwarding = 1" > /etc/sysctl.d/99-tailscale.conf
      echo -e "RELOADING SYSCTL"
      sysctl -q -p /etc/sysctl.d/99-tailscale.conf
    else
      echo -e "99-TAILSCALE.CONF EXISTS, SKIPPING..."
    fi
  else
    echo -e "SYSTEM.TAILSCALE.EXIT AND SYSTEM.TAILSCALE.SUBNET ARE FALSE, SKIPPING..."
  fi
else
  echo -e "SYSTEM.TAILSCALE.ENABLED IS FALSE, SKIPPING..."
fi
echo -e "### TAILSCALE MODULE - STOP ###"

### DOCKER MODULE
echo -e "### DOCKER MODULE - START ###"
if [[ $(yq eval '.system.docker.enabled // false' $CONFIG) == true ]]; then
  if [[ -z "$(which docker)" ]]; then
    ### INSTALL DOCKER
    echo -e "INSTALLING DOCKER"
    apk add -U docker --quiet

    ### ENABLE BOOT START
    echo -e "ENABLE BOOT START"
    rc-update add docker default

    ### START SERVICE
    echo -e "START SERVICE"
    rc-service docker start
  else
    echo -e "DOCKER IS ALREADY INSTALLED, SKIPPING..."
  fi

  ### INSTALL DOCKER COMPOSE
  if [[ -z $(apk list --installed | grep docker-cli-compose) ]]; then
    ### INSTALL DOCKER COMPOSE
    echo -e "INSTALLING DOCKER COMPOSE"
    apk add -U docker-cli-compose --quiet
  else
    echo -e "DOCKER COMPOSE IS ALREADY INSTALLED, SKIPPING..."
  fi

  ### ADD DOCKER GROUP TO USER
  if [[ -n $(yq eval '.system.docker.user // ""' $CONFIG) ]]; then
    if [[ -z $(groups $(yq eval '.system.docker.user // ""' $CONFIG) | grep docker) ]]; then
      ### ADD DOCKER GROUP TO USER
      echo -e "ADDING DOCKER GROUP TO $(yq eval '.system.docker.user // ""' $CONFIG)"
      addgroup $(yq eval '.system.docker.user // ""' $CONFIG) docker
    else
      ### DOCKER GROUP EXISTS FOR USER
      echo -e "DOCKER GROUP EXISTS FOR $(yq eval '.system.docker.user // ""' $CONFIG), SKIPPING..."
    fi
  else
    echo -e "DOCKER.USER IS NULL, SKIPPING..."
  fi

  ### INGRESS PROXY NETWORK
  if [[ $(yq eval '.system.docker.ingress // false' $CONFIG) == true ]]; then
    if [[ -z "$(docker network list --filter 'name=proxy' --quiet)" ]]; then
      echo -e "CREATING PROXY NETWORK"
      docker network create proxy
    else
      echo -e "PROXY NETWORK EXISTS, SKIPPING..."
    fi
  else
    echo -e "DOCKER.INGRESS IS FALSE, SKIPPING..."
  fi

  # ### SETUP TRAEFIK
  # if [[ $(yq eval '.system.docker.ingress.traefik // false' $CONFIG) == true ]]; then
  #   ### CREATE TRAEFIK DIRECTORY (IF DOESN'T EXIST)
  #   if [[ ! -d /root/.config/traefik ]]; then
  #     echo -e "TRAEFIK DIRECTORY MISSING, CREATING..."
  #     mkdir -p /root/.config/traefik
  #   else
  #     echo -e "TRAEFIK DIRECTORY EXISTS, SKIPPING..."
  #   fi

  #   ### CREATE ACME.JSON FILE
  #   if [[ ! -f /root/.config/traefik/acme.json ]]; then
  #     echo -e "ACME.JSON MISSING, CREATING..."
  #     touch /root/.config/traefik/acme.json
  #   else
  #     echo -e "ACME.JSON EXISTS, SKIPPING..."
  #   fi

  #   ### SET ACME.JSON OWNERSHIP
  #   if [[ "$(stat -c '%U:%G' /root/.config/traefik/acme.json)" != "root:root" ]]; then
  #     echo -e "ACME.JSON OWNERSHIP IS WRONG, CHANGING..."
  #     chown root:root /root/.config/traefik/acme.json
  #   else
  #     echo -e "ACME.JSON OWNERSHIP IS CORRECT, SKIPPING..."
  #   fi

  #   ### SET ACME.JSON PERMISSIONS
  #   if [[ "$(stat -c '%a' /root/.config/traefik/acme.json)" != 600 ]]; then
  #     echo -e "ACME.JSON PERMISSIONS ARE WRONG, CHANGING..."
  #     chmod 600 /root/.config/traefik/acme.json
  #   else
  #     echo -e "ACME.JSON PERMISSIONS ARE CORRECT, SKIPPING..."
  #   fi

  #   ### CREATE CONFIG.YML FILE
  #   if [[ ! -f /root/.config/traefik/config.yml ]]; then
  #     echo -e "CONFIG.YML MISSING, CREATING..."
  #     touch /root/.config/traefik/config.yml
  #   else
  #     echo -e "CONFIG.YML EXISTS, SKIPPING..."
  #   fi

  #   ### CREATE TRAEFIK.YML FILE
  #   if [[ ! -f /root/.config/traefik/traefik.yml ]]; then
  #     echo -e "TRAEFIK.YML MISSING, CREATING..."
  #     touch /root/.config/traefik/traefik.yml
  #   else
  #     echo -e "TRAEFIK.YML EXISTS, SKIPPING..."
  #   fi
  # else
  #   echo -e "DOCKER.INGRESS.TRAEFIK IS FALSE, SKIPPING..."
  # fi

  ### INSTALL PORTAINER
  if [[ $(yq eval '.system.containers.portainer.enabled // false' $CONFIG) == true ]]; then
    if [[ -z "$(docker container list --filter 'name=portainer' --quiet)" ]]; then
      if [[ -z "$(docker volume list --filter 'name=portainer_data' --quiet)" ]]; then
        ### CREATE PORTAINER_DATA VOLUME
        echo -e "CREATING PORTAINER_DATA VOLUME"
        docker volume create portainer_data
      else
        echo -e "PORTAINER_DATA VOLUME EXISTS, SKIPPING..."
      fi

      ### CREATE PORTAINER CONTAINER
      echo -e "CREATING PORTAINER CONTAINER"
      docker run -d -p 9443:9443 --name portainer --restart=always -v /etc/localtime:/etc/localtime:ro -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data -l com.centurylinklabs.watchtower.enable=true portainer/portainer-ce:latest
    else
      echo -e "PORTAINER CONTAINER EXISTS, SKIPPING..."
    fi
  else
    echo -e "SYSTEM.CONTAINERS.PORTAINER IS FALSE, SKIPPING"
  fi
else
  echo -e "DOCKER.ENABLED IS FALSE, SKIPPING..."
fi
echo -e "### DOCKER MODULE - STOP ###"

### UFW MODULE

# ### SERVICES

# ##### ADGUARD
# echo -e "### SERVICE.ADGUARD - START ###"
# if [[ $(yq eval '.services.adguard.enabled // false' $CONFIG) == true ]]; then
#   if [[ -z "$(docker container list --filter 'name=adguard' --quiet)" ]]; then
#     if [[ ! -d /root/.config/services/adguard ]]; then
#       echo -e "ADGUARD DIRECTORY MISSING, CREATING..."
#       create_directory /root/.config/services/adguard
#       echo -e ""
#     else
#       echo -e "ADGUARD DIRECTORY EXISTS, SKIPPING..."
#     fi

#     if [[ ! -f /root/.config/services/adguard/compose.yml ]]; then
#       echo -e "ADGUARD COMPOSE MISSING, INSTALLING..."
#       curl -sL -o /root/.config/services/adguard/compose.yml -H '$HEADER_NO_CACHE' $REPOSITORY_URL/services/adguard/compose.yml
#       echo -e ""

#       ### SET ADGUARD COMPOSE OWNERSHIP
#       if [[ "$(stat -c '%U:%G' /root/.config/services/adguard/compose.yml)" != "root:root" ]]; then
#         echo -e "ADGUARD COMPOSE OWNERSHIP IS WRONG, CHANGING..."
#         set_ownership /root/.config/services/adguard/compose.yml root
#         echo -e ""
#       else
#         echo -e "ADGUARD COMPOSE OWNERSHIP IS CORRECT, SKIPPING..."
#         echo -e ""
#       fi

#       ### SET ADGUARD COMPOSE PERMISSIONS
#       if [[ "$(stat -c '%a' /root/.config/services/adguard/compose.yml)" != 600 ]]; then
#         echo -e "ADGUARD COMPOSE PERMISSIONS ARE WRONG, CHANGING..."
#         set_permission /root/.config/services/adguard/compose.yml 600
#         echo -e ""
#       else
#         echo -e "ADGUARD COMPOSE PERMISSIONS ARE CORRECT, SKIPPING..."
#         echo -e ""
#       fi
#     else
#       echo -e "ADGUARD COMPOSE EXISTS, SKIPPING..."
#     fi

#     echo -e "ADGUARD CONTAINER STARTING"
#     docker compose --file /root/.config/services/adguard/compose.yml up --detach
#     echo -e ""
#   else
#     echo -e "ADGUARD CONTAINER EXISTS, SKIPPING..."
#   fi
# else
#   echo -e "SERVICES.ADGUARD.ENABLED IS FALSE, SKIPPING..."
# fi
# echo -e "### SERVICES.ADGUARD - STOP ###"

# ##### PLEX
# echo -e "### SERVICE.PLEX - START ###"
# if [[ $(yq eval '.services.plex.enabled // false' $CONFIG) == true ]] && [[ $(yq eval '.system.nfs.mounts.media' $CONFIG) == true ]]; then
#   if [[ -z "$(docker container list --filter 'name=plex' --quiet)" ]]; then
#     if [[ ! -d /root/.config/services/plex ]]; then
#       echo -e "PLEX DIRECTORY MISSING, CREATING..."
#       create_directory /root/.config/services/plex
#       echo -e ""
#     else
#       echo -e "PLEX DIRECTORY EXISTS, SKIPPING..."
#     fi

#     if [[ ! -f /root/.config/services/plex/compose.yml ]]; then
#       echo -e "PLEX COMPOSE MISSING, INSTALLING..."
#       curl -sL -o /root/.config/services/plex/compose.yml -H '$HEADER_NO_CACHE' $REPOSITORY_URL/services/plex/compose.yml
#       echo -e ""

#       ### SET PLEX COMPOSE OWNERSHIP
#       if [[ "$(stat -c '%U:%G' /root/.config/services/plex/compose.yml)" != "root:root" ]]; then
#         echo -e "PLEX COMPOSE OWNERSHIP IS WRONG, CHANGING..."
#         set_ownership /root/.config/services/plex/compose.yml root
#         echo -e ""
#       else
#         echo -e "PLEX COMPOSE OWNERSHIP IS CORRECT, SKIPPING..."
#         echo -e ""
#       fi

#       ### SET PLEX COMPOSE PERMISSIONS
#       if [[ "$(stat -c '%a' /root/.config/services/plex/compose.yml)" != 600 ]]; then
#         echo -e "PLEX COMPOSE PERMISSIONS ARE WRONG, CHANGING..."
#         set_permission /root/.config/services/plex/compose.yml 600
#         echo -e ""
#       else
#         echo -e "PLEX COMPOSE PERMISSIONS ARE CORRECT, SKIPPING..."
#         echo -e ""
#       fi
#     else
#       echo -e "PLEX COMPOSE EXISTS, SKIPPING..."
#     fi

#     echo -e "PLEX CONTAINER STARTING"
#     docker compose --file /root/.config/services/plex/compose.yml up --detach
#     echo -e ""
#   else
#     echo -e "PLEX CONTAINER EXISTS, SKIPPING..."
#   fi
# else
#   echo -e "SERVICES.PLEX.ENABLED IS FALSE, SKIPPING..."
# fi
# echo -e "### SERVICES.PLEX - STOP ###"

# ##### TAUTULLI
# echo -e "### SERVICE.TAUTULLI - START ###"
# if [[ $(yq eval '.services.tautulli.enabled // false' $CONFIG) == true ]]; then
#   if [[ -z "$(docker container list --filter 'name=tautulli' --quiet)" ]]; then
#     if [[ ! -d /root/.config/services/tautulli ]]; then
#       echo -e "TAUTULLI DIRECTORY MISSING, CREATING..."
#       create_directory /root/.config/services/tautulli
#       echo -e ""
#     else
#       echo -e "TAUTULLI DIRECTORY EXISTS, SKIPPING..."
#     fi

#     if [[ ! -f /root/.config/services/tautulli/compose.yml ]]; then
#       echo -e "TAUTULLI COMPOSE MISSING, INSTALLING..."
#       curl -sL -o /root/.config/services/tautulli/compose.yml -H '$HEADER_NO_CACHE' $REPOSITORY_URL/services/tautulli/compose.yml
#       echo -e ""

#       ### SET TAUTULLI COMPOSE OWNERSHIP
#       if [[ "$(stat -c '%U:%G' /root/.config/services/tautulli/compose.yml)" != "root:root" ]]; then
#         echo -e "TAUTULLI COMPOSE OWNERSHIP IS WRONG, CHANGING..."
#         set_ownership /root/.config/services/tautulli/compose.yml root
#         echo -e ""
#       else
#         echo -e "TAUTULLI COMPOSE OWNERSHIP IS CORRECT, SKIPPING..."
#         echo -e ""
#       fi

#       ### SET TAUTULLI COMPOSE PERMISSIONS
#       if [[ "$(stat -c '%a' /root/.config/services/tautulli/compose.yml)" != 600 ]]; then
#         echo -e "TAUTULLI COMPOSE PERMISSIONS ARE WRONG, CHANGING..."
#         set_permission /root/.config/services/tautulli/compose.yml 600
#         echo -e ""
#       else
#         echo -e "TAUTULLI COMPOSE PERMISSIONS ARE CORRECT, SKIPPING..."
#         echo -e ""
#       fi
#     else
#       echo -e "TAUTULLI COMPOSE EXISTS, SKIPPING..."
#     fi

#     echo -e "TAUTULLI CONTAINER STARTING"
#     docker compose --file /root/.config/services/tautulli/compose.yml up --detach
#     echo -e ""
#   else
#     echo -e "TAUTULLI CONTAINER EXISTS, SKIPPING..."
#   fi
# else
#   echo -e "SERVICES.TAUTULLI.ENABLED IS FALSE, SKIPPING..."
# fi
# echo -e "### SERVICES.TAUTULLI - STOP ###"

# ##### TRAEFIK
# echo -e "### SERVICES.TRAEFIK - START ###"
# if [[ $(yq eval '.services.traefik.enabled // false' $CONFIG) == true ]] && [[ $(yq eval '.system.docker.ingress // false' $CONFIG) == true ]]; then
#   if [[ -z "$(docker container list --filter 'name=traefik' --quiet)" ]]; then
#     if [[ ! -d /root/.config/services/traefik ]]; then
#       echo -e "TRAEFIK DIRECTORY MISSING, CREATING..."
#       create_directory /root/.config/services/traefik
#       echo -e ""
#     else
#       echo -e "TRAEFIK DIRECTORY EXISTS, SKIPPING..."
#     fi

#     if [[ ! -f /root/.config/services/traefik/compose.yml ]]; then
#       echo -e "TRAEFIK COMPOSE MISSING, INSTALLING..."
#       curl -sL -o /root/.config/services/traefik/compose.yml -H '$HEADER_NO_CACHE' $REPOSITORY_URL/services/traefik/compose.tailscale.yml
#       echo -e ""

#       ### SET TRAEFIK COMPOSE OWNERSHIP
#       if [[ "$(stat -c '%U:%G' /root/.config/services/traefik/compose.yml)" != "root:root" ]]; then
#         echo -e "TRAEFIK COMPOSE OWNERSHIP IS WRONG, CHANGING..."
#         set_ownership /root/.config/services/traefik/compose.yml root
#         echo -e ""
#       else
#         echo -e "TRAEFIK COMPOSE OWNERSHIP IS CORRECT, SKIPPING..."
#         echo -e ""
#       fi

#       ### SET TRAEFIK COMPOSE PERMISSIONS
#       if [[ "$(stat -c '%a' /root/.config/services/traefik/compose.yml)" != 700 ]]; then
#         echo -e "TRAEFIK COMPOSE PERMISSIONS ARE WRONG, CHANGING..."
#         set_permission /root/.config/services/traefik/compose.yml 700
#         echo -e ""
#       else
#         echo -e "TRAEFIK COMPOSE PERMISSIONS ARE CORRECT, SKIPPING..."
#         echo -e ""
#       fi
#     else
#       echo -e "TRAEFIK COMPOSE EXISTS, SKIPPING..."
#     fi

#     if [[ ! -f /root/.config/services/traefik/.env ]]; then
#       echo -e ".ENV MISSING, INSTALLING..."
#       create_file /root/.config/services/traefik/.env
#       echo -e ""

#       ### SET .ENV OWNERSHIP
#       if [[ "$(stat -c '%U:%G' /root/.config/services/traefik/.env)" != "root:root" ]]; then
#         echo -e ".ENV OWNERSHIP IS WRONG, CHANGING..."
#         set_ownership /root/.config/services/traefik/.env root
#         echo -e ""
#       else
#         echo -e ".ENV OWNERSHIP IS CORRECT, SKIPPING..."
#         echo -e ""
#       fi

#       ### SET .ENV PERMISSIONS
#       if [[ "$(stat -c '%a' /root/.config/services/traefik/.env)" != 600 ]]; then
#         echo -e ".ENV PERMISSIONS ARE WRONG, CHANGING..."
#         set_permission /root/.config/services/traefik/.env 600
#         echo -e ""
#       else
#         echo -e ".ENV PERMISSIONS ARE CORRECT, SKIPPING..."
#         echo -e ""
#       fi

#       echo -e "POPULATING .ENV"
#       yq --output-format props eval '.services.traefik.required_env' $CONFIG > /root/.config/services/traefik/.env
#       echo -e ""
#     else
#       echo -e ".ENV EXISTS, SKIPPING..."
#     fi

#     # if [[ ! -f /root/.config/services/traefik/acme.json ]]; then
#     #   echo -e "ACME.JSON MISSING, INSTALLING..."
#     #   create_file /root/.config/services/traefik/acme.json
#     #   echo -e ""

#     #   ### SET ACME.JSON OWNERSHIP
#     #   if [[ "$(stat -c '%U:%G' /root/.config/services/traefik/acme.json)" != "root:root" ]]; then
#     #     echo -e "ACME.JSON OWNERSHIP IS WRONG, CHANGING..."
#     #     set_ownership /root/.config/services/traefik/acme.json root
#     #     echo -e ""
#     #   else
#     #     echo -e "ACME.JSON OWNERSHIP IS CORRECT, SKIPPING..."
#     #     echo -e ""
#     #   fi

#     #   ### SET ACME.JSON PERMISSIONS
#     #   if [[ "$(stat -c '%a' /root/.config/services/traefik/acme.json)" != 600 ]]; then
#     #     echo -e "ACME.JSON PERMISSIONS ARE WRONG, CHANGING..."
#     #     set_permission /root/.config/services/traefik/acme.json 600
#     #     echo -e ""
#     #   else
#     #     echo -e "ACME.JSON PERMISSIONS ARE CORRECT, SKIPPING..."
#     #     echo -e ""
#     #   fi
#     # else
#     #   echo -e "ACME.JSON EXISTS, SKIPPING..."
#     # fi

#     if [[ ! -f /root/.config/services/traefik/config.yml ]]; then
#       echo -e "CONFIG.YML MISSING, INSTALLING..."
#       create_file /root/.config/services/traefik/config.yml
#       echo -e ""

#       ### SET CONFIG.YML OWNERSHIP
#       if [[ "$(stat -c '%U:%G' /root/.config/services/traefik/config.yml)" != "root:root" ]]; then
#         echo -e "CONFIG.YML OWNERSHIP IS WRONG, CHANGING..."
#         set_ownership /root/.config/services/traefik/config.yml root
#         echo -e ""
#       else
#         echo -e "CONFIG.YML OWNERSHIP IS CORRECT, SKIPPING..."
#         echo -e ""
#       fi

#       ### SET CONFIG.YML PERMISSIONS
#       if [[ "$(stat -c '%a' /root/.config/services/traefik/config.yml)" != 700 ]]; then
#         echo -e "CONFIG.YML PERMISSIONS ARE WRONG, CHANGING..."
#         set_permission /root/.config/services/traefik/config.yml 700
#         echo -e ""
#       else
#         echo -e "CONFIG.YML PERMISSIONS ARE CORRECT, SKIPPING..."
#         echo -e ""
#       fi

#       echo -e "POPULATING CONFIG.YML"
#       yq eval '.services.traefik.custom_config' $CONFIG > /root/.config/services/traefik/config.yml
#       echo -e ""
#     else
#       echo -e "CONFIG.YML EXISTS, SKIPPING..."
#     fi

#     echo -e "TRAEFIK CONTAINER STARTING"
#     docker compose --file /root/.config/services/traefik/compose.yml up --detach
#     echo -e ""
#   else
#     echo -e "TRAEFIK CONTAINER EXISTS, SKIPPING..."
#   fi
# else
#   echo -e "SERVICES.TRAEFIK.ENABLED IS FALSE, SKIPPING..."
# fi
# echo -e "### SERVICES.TRAEFIK - STOP ###"

# ##### WATCHTOWER
# echo -e "### SERVICE.WATCHTOWER - START ###"
# if [[ $(yq eval '.services.watchtower.enabled // false' $CONFIG) == true ]]; then
#   if [[ -z "$(docker container list --filter 'name=watchtower' --quiet)" ]]; then
#     if [[ ! -d /root/.config/services/watchtower ]]; then
#       echo -e "WATCHTOWER DIRECTORY MISSING, CREATING..."
#       create_directory /root/.config/services/watchtower
#       echo -e ""
#     else
#       echo -e "WATCHTOWER DIRECTORY EXISTS, SKIPPING..."
#     fi

#     if [[ ! -f /root/.config/services/watchtower/compose.yml ]]; then
#       echo -e "WATCHTOWER COMPOSE MISSING, INSTALLING..."
#       curl -sL -o /root/.config/services/watchtower/compose.yml -H '$HEADER_NO_CACHE' $REPOSITORY_URL/services/watchtower/compose.yml
#       echo -e ""

#       ### SET WATCHTOWER COMPOSE OWNERSHIP
#       if [[ "$(stat -c '%U:%G' /root/.config/services/watchtower/compose.yml)" != "root:root" ]]; then
#         echo -e "WATCHTOWER COMPOSE OWNERSHIP IS WRONG, CHANGING..."
#         set_ownership /root/.config/services/watchtower/compose.yml root
#         echo -e ""
#       else
#         echo -e "WATCHTOWER COMPOSE OWNERSHIP IS CORRECT, SKIPPING..."
#         echo -e ""
#       fi

#       ### SET WATCHTOWER COMPOSE PERMISSIONS
#       if [[ "$(stat -c '%a' /root/.config/services/watchtower/compose.yml)" != 600 ]]; then
#         echo -e "WATCHTOWER COMPOSE PERMISSIONS ARE WRONG, CHANGING..."
#         set_permission /root/.config/services/watchtower/compose.yml 600
#         echo -e ""
#       else
#         echo -e "WATCHTOWER COMPOSE PERMISSIONS ARE CORRECT, SKIPPING..."
#         echo -e ""
#       fi
#     else
#       echo -e "WATCHTOWER COMPOSE EXISTS, SKIPPING..."
#     fi

#     echo -e "WATCHTOWER CONTAINER STARTING"
#     docker compose --file /root/.config/services/watchtower/compose.yml up --detach
#     echo -e ""
#   else
#     echo -e "WATCHTOWER CONTAINER EXISTS, SKIPPING..."
#   fi
# else
#   echo -e "SERVICES.WATCHTOWER.ENABLED IS FALSE, SKIPPING..."
# fi
# echo -e "### SERVICES.WATCHTOWER - STOP ###"